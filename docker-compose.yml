version: "3.1"

services:
  conseil-lorre:
    image: cryptonomictech/conseil:latest
    environment:

      CONSEIL_LORRE_DB_URL: "jdbc:postgresql://${DB_HOST}:5432/${DB_DATABASE}"
      CONSEIL_LORRE_DB_USER: "${DB_USER}"
      CONSEIL_LORRE_DB_PASSWORD: "${DB_PASSWORD}"

      CONSEIL_XTZ_NETWORK: "mainnet"
      CONSEIL_XTZ_ENABLED: "true"
      CONSEIL_XTZ_NODE_HOSTNAME: "${XTZ_HOST}"
      CONSEIL_XTZ_NODE_PROTOCOL: "${XTZ_SCHEME}"
      CONSEIL_XTZ_NODE_PORT: "${XTZ_PORT}"
      CONSEIL_XTZ_NODE_PATH_PREFIX: ""

      LORRE_RUNNER_PLATFORM: "tezos"
      LORRE_RUNNER_NETWORK: "mainnet"

      # Feature-Flag: set to false to disable the concurrent computation of future endorsement/baking rights
      CONSEIL_LORRE_BLOCK_RIGHTS_FETCHING_ENABLED: "true"

      JVM_XMX: "4G"
    entrypoint: ["/root/entrypoint.sh", "conseil-lorre"]
    # If using localhost db you may want to use the host network
    network_mode: "host"
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
  conseil-florence-lorre:
    image: cryptonomictech/conseil:latest
    environment:
      CONSEIL_LORRE_DB_URL: "jdbc:postgresql://${DB_HOST}:5432/${FLORENCENET_DB_DATABASE}"
      CONSEIL_LORRE_DB_USER: "${DB_USER}"
      CONSEIL_LORRE_DB_PASSWORD: "${DB_PASSWORD}"

      CONSEIL_XTZ_NETWORK: "florencenet"
      CONSEIL_XTZ_ENABLED: "true"
      CONSEIL_XTZ_NODE_HOSTNAME: "${FLORENCENET_XTZ_HOST}"
      CONSEIL_XTZ_NODE_PROTOCOL: "${FLORENCENET_XTZ_SCHEME}"
      CONSEIL_XTZ_NODE_PORT: "${FLORENCENET_XTZ_PORT}"
      CONSEIL_XTZ_NODE_PATH_PREFIX: ""

      LORRE_RUNNER_PLATFORM: "tezos"
      LORRE_RUNNER_NETWORK: "florencenet"

      # Feature-Flag: set to false to disable the concurrent computation of future endorsement/baking rights
      CONSEIL_LORRE_BLOCK_RIGHTS_FETCHING_ENABLED: "true"

      JVM_XMX: "4G"
    entrypoint: ["/root/entrypoint.sh", "conseil-lorre"]
    # If using localhost db you may want to use the host network
    network_mode: "host"
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
  fe-server:
    build:
      context: https://github.com/everstake/teztracker-front.git
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
  api-server:
    build: .
    ports:
      - ${TEZTRACKER_PORT}:${TEZTRACKER_PORT}
    environment:
      TEZTRACKER_PORT: ${TEZTRACKER_PORT}
      TEZTRACKER_MAINNET_SQLCONNECTIONSTRING: ${TEZTRACKER_MAINNET_SQLCONNECTIONSTRING}
      TEZTRACKER_FLORENCENET_SQLCONNECTIONSTRING: ${TEZTRACKER_FLORENCENET_SQLCONNECTIONSTRING}
      TEZTRACKER_LOG_LEVEL: ${TEZTRACKER_LOG_LEVEL}
      TEZTRACKER_PRODUCTION: ${TEZTRACKER_PRODUCTION}
      TEZTRACKER_COUNTERINTERVALHOURS: ${TEZTRACKER_COUNTERINTERVALHOURS}
      TEZTRACKER_SNAPSHOTCHECKINTERVALMINUTES: ${TEZTRACKER_SNAPSHOTCHECKINTERVALMINUTES}
      TEZTRACKER_DOUBLEBAKINGCHECKINTERVALMINUTES: ${TEZTRACKER_DOUBLEBAKINGCHECKINTERVALMINUTES}
      TEZTRACKER_DOUBLEENDORSEMENTCHECKINTERVALMINUTES: ${TEZTRACKER_DOUBLEENDORSEMENTCHECKINTERVALMINUTES}
      TEZTRACKER_ASSETSPARSEINTERVALMINUTES: ${TEZTRACKER_ASSETSPARSEINTERVALMINUTES}
      TEZTRACKER_VOTINGROLLSINTERVALMINUTES : ${TEZTRACKER_VOTINGROLLSINTERVALMINUTES}
      TEZTRACKER_THIRDPARTYBAKERSINTERVALMINUTES : ${TEZTRACKER_THIRDPARTYBAKERSINTERVALMINUTES}
      TEZTRACKER_BAKERSSOCIALMEDIAHOURS : ${TEZTRACKER_BAKERSSOCIALMEDIAHOURS}

      TEZTRACKER_SMTPHOST : ${TEZTRACKER_SMTPHOST}
      TEZTRACKER_SMTPPORT : ${TEZTRACKER_SMTPPORT}
      TEZTRACKER_SMTPUSER : ${TEZTRACKER_SMTPUSER}
      TEZTRACKER_SMTPPASSWORD : ${TEZTRACKER_SMTPPASSWORD}

      #todo: if the scheme is not http or host/port are different then for lorry - pass it through
      TEZTRACKER_MAINNET_NODERPC_HOST: "${XTZ_HOST}:${XTZ_PORT}"
      TEZTRACKER_MAINNET_NODERPC_SCHEMES: "${XTZ_SCHEME}"
      TEZTRACKER_FLORENCENET_NODERPC_HOST: "${FLORENCENET_XTZ_HOST}:${FLORENCENET_XTZ_PORT}"
      TEZTRACKER_FLORENCENET_NODERPC_SCHEMES: "${FLORENCENET_XTZ_SCHEME}"
    # If using localhost db you may want to use the host network
    network_mode: "host"
    restart: on-failure
    volumes:
      - ./services/mailer/templates:/services/mailer/templates
    deploy:
      restart_policy:
        condition: on-failure
  api-documentation:
    build:
      context: .
      dockerfile: Dockerfile-api
    ports:
      - ${TEZTRACKER_API_DOCUMENTATION_PORT}:8080