swagger: '2.0'
info:
  title: TezTracker API
  version: 0.0.1
paths:
  '/v2/data/{platform}/{network}/baking_rights':
    get:
      operationId: getBakingRights
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: priorities_to
          type: integer
          default: 10
          minimum: 0
          maximum: 64
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 50
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_id
          type: array
      responses:
        '200':
          description: Endpoint for baking rights
          schema:
            items:
              $ref: '#/definitions/BakingRightsPerBlock'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Blocks
  '/v2/data/{platform}/{network}/future_baking_rights':
    get:
      operationId: getFutureBakingRights
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: priorities_to
          type: integer
          default: 10
          minimum: 1
          maximum: 64
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 50
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Endpoint for future baking rights
          schema:
            items:
              $ref: '#/definitions/FutureBakingRightsPerBlock'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Blocks
  '/v2/data/{platform}/{network}/snapshots':
    get:
      operationId: getSnapshots
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Endpoint for snapshots
          schema:
            items:
              $ref: '#/definitions/Snapshots'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
  '/v2/data/{platform}/{network}/info':
    get:
      operationId: getInfo
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
          enum: [tezos]
        - in: path
          name: network
          description: Not used
          required: true
          type: string
          enum: [mainnet, delphinet]
        - in: query
          name: currency
          type: string
          enum: [usd, eur, gbp, cny]
          default: usd
      produces:
        - application/json
      responses:
        '200':
          description: Application info endpoint
          schema:
            $ref: '#/definitions/Info'
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - App Info
  '/v2/data/{platform}/{network}/health':
    get:
      operationId: getHealthCheckInfo
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
          enum: [tezos]
        - in: path
          name: network
          description: Not used
          required: true
          type: string
          enum: [mainnet, delphinet]
      produces:
        - application/json
      responses:
        '200':
          description: Application health info endpoint
          schema:
            $ref: '#/definitions/Health'
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - App Info
  '/v2/data/{platform}/{network}/charts':
    get:
      operationId: getChartsInfo
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
          enum: [tezos]
        - in: path
          name: network
          description: Not used
          required: true
          type: string
          enum: [mainnet, delphinet]
        - in: query
          name: from
          type: integer
          format: int64
          required: true
        - in: query
          name: to
          type: integer
          format: int64
          required: true
        - in: query
          name: period
          required: true
          type: string
          enum: [D]
        - in: query
          name: columns
          required: true
          type: array
          items:
            type: string
      produces:
        - application/json
      responses:
        '200':
          description: Application info endpoint
          schema:
            items:
              $ref: '#/definitions/ChartsData'
            type: array
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - App Info
  '/v2/data/{platform}/{network}/charts/bakers':
    get:
      operationId: getBakerChartInfo
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
          enum: [tezos]
        - in: path
          name: network
          description: Not used
          required: true
          type: string
          enum: [mainnet, delphinet]
        - in: query
          name: limit
          type: integer
          format: int64
          default: 20
      produces:
        - application/json
      responses:
        '200':
          description: Application info endpoint
          schema:
            items:
              $ref: '#/definitions/BakerChartData'
            type: array
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - App Info
  '/v2/data/{platform}/{network}/charts/blocks_priority':
    get:
      operationId: getBlocksPriorityChartInfo
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
          enum: [tezos]
        - in: path
          name: network
          description: Not used
          required: true
          type: string
          enum: [mainnet, delphinet]
        - in: query
          name: limit
          type: integer
          format: int64
          default: 10
      produces:
        - application/json
      responses:
        '200':
          description: Application info endpoint
          schema:
            items:
              $ref: '#/definitions/BlockPriorityChartData'
            type: array
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - App Info
  '/v2/data/thirdparty/bakers':
    get:
      operationId: getThirdPartyBakersHandler
      produces:
        - application/json
      responses:
        '200':
          description: Application info endpoint
          schema:
            items:
              $ref: '#/definitions/ThirdPartyBakers'
            type: array
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - App Info
  '/v2/data/{platform}/{network}/accounts':
    get:
      operationId: getAccountsList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - in: query
          name: after_id
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: integer
            format: int64
          name: block_level
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_netid
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_protocol
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_id
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_source
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_destination
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_participant
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_kind
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_id
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_manager
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_delegate
          description: Not used
          type: array
        - in: query
          name: sort_by
          description: Not used
          type: string
        - in: query
          name: order
          description: Not used
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: favorites
          description: favorites accounts
          type: array
      responses:
        '200':
          description: Query compatibility endpoint for accounts
          schema:
            items:
              $ref: '#/definitions/AccountsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/top_balance':
    get:
      operationId: getAccountsTopBalanceList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - in: query
          name: after_id
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: favorites
          description: favorites accounts
          type: array
      responses:
        '200':
          description: Query compatibility endpoint for accounts
          schema:
            items:
              $ref: '#/definitions/AccountsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/contracts':
    get:
      operationId: getContractsList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - in: query
          name: after_id
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_id
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_manager
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_delegate
          description: Not used
          type: array
        - in: query
          name: sort_by
          description: Not used
          type: string
        - in: query
          name: order
          description: Not used
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: favorites
          description: favorites accounts
          type: array
      responses:
        '200':
          description: Query compatibility endpoint for contract accounts
          schema:
            items:
              $ref: '#/definitions/AccountsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/bakers':
    get:
      operationId: getBakersList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: favorites
          description: favorites accounts
          type: array
      responses:
        '200':
          description: Query Endpoint for getting list of baker accounts ordered by staking balance.
          schema:
            items:
              $ref: '#/definitions/BakersRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/public_bakers':
    get:
      operationId: getPublicBakersList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: favorites
          description: favorites accounts
          type: array
      responses:
        '200':
          description: Query Endpoint for getting list of baker accounts ordered by staking balance.
          schema:
            items:
              $ref: '#/definitions/PublicBaker'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/public_bakers/search':
    get:
      operationId: getPublicBakersListForSearch
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
      responses:
        '200':
          description: Query Endpoint for getting list of baker accounts with name for search.
          schema:
            items:
              $ref: '#/definitions/PublicBakerSearch'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/{accountId}':
    get:
      operationId: getAccount
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for account
          schema:
            $ref: >-
              #/definitions/AccountsRow
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal error
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/{accountId}/report':
    get:
      operationId: getAccountReport
      produces:
        - text/csv
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: query
          name: from
          required: true
          type: integer
        - in: query
          name: to
          required: true
          type: integer
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_type
          description: Not used
          type: array
      responses:
        '200':
          description: CSV file to download
          schema:
            type: array
            items:
              type: integer
              format: uint8
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal error
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/{accountId}/assets':
    get:
      operationId: getAccountAssetsBalancesList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for account
          schema:
            type: array
            items:
              $ref: >-
                #/definitions/AccountAssetBalanceRow
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal error
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/{accountId}/delegators':
    get:
      operationId: getAccountDelegators
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Endpoint for account delegators
          schema:
            items:
              $ref: '#/definitions/AccountsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/balances/{accountId}':
    get:
      operationId: getAccountBalanceList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: query
          name: from
          required: true
          type: integer
        - in: query
          name: to
          type: integer
          required: true
      responses:
        '200':
          description: Query compatibility endpoint for account balances
          schema:
            items:
              $ref: '#/definitions/AccountBalance'
            type: array
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/baking/{accountId}':
    get:
      operationId: getAccountBakingList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for account baking
          schema:
            items:
              $ref: '#/definitions/AccountBakingRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/baking/{accountId}/total':
    get:
      operationId: getAccountTotalBaking
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for account baking
          schema:
            $ref: '#/definitions/AccountBakingRow'
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/baking/{accountId}/blocks/{cycleId}':
    get:
      operationId: getAccountBakedBlocksList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: path
          name: cycleId
          required: true
          type: integer
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for account baking
          schema:
            items:
              $ref: '#/definitions/BlocksRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/baking/{accountId}/future':
    get:
      operationId: getAccountFutureBaking
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for account future baking
          schema:
            items:
              $ref: '#/definitions/AccountBakingRow'
            type: array
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/baking/{accountId}/future_baking_rights/{cycleId}':
    get:
      operationId: getAccountFutureBakingRightsByCycle
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: path
          name: cycleId
          required: true
          type: integer
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for account future baking
          schema:
            items:
              $ref: '#/definitions/BakingRightsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/endorsing/{accountId}':
    get:
      operationId: getAccountEndorsingList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for account baking
          schema:
            items:
              $ref: '#/definitions/AccountEndorsingRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/endorsing/{accountId}/total':
    get:
      operationId: getAccountTotalEndorsing
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for account baking
          schema:
            $ref: '#/definitions/AccountEndorsingRow'
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/endorsing/{accountId}/endorsements/{cycleId}':
    get:
      operationId: getAccountEndorsementsByCycleList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: path
          name: cycleId
          required: true
          type: integer
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for account baking
          schema:
            items:
              $ref: '#/definitions/OperationsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/endorsing/{accountId}/future':
    get:
      operationId: getAccountFutureEndorsing
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for account future baking
          schema:
            items:
              $ref: '#/definitions/AccountEndorsingRow'
            type: array
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/endorsing/{accountId}/future_endorsement_rights/{cycleId}':
    get:
      operationId: getAccountFutureEndorsementRightsByCycle
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: path
          name: cycleId
          required: true
          type: integer
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for account future baking
          schema:
            items:
              $ref: '#/definitions/EndorsementRightsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/rewards/{accountId}':
    get:
      operationId: getAccountRewardsList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for account rewards
          schema:
            items:
              $ref: '#/definitions/AccountRewardsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/security_deposit/{accountId}/future':
    get:
      operationId: getAccountSecurityDepositList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for account rewards
          schema:
            items:
              $ref: '#/definitions/AccountSecurityDepositRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/accounts/{accountId}/delegators/{cycleId}':
    get:
      operationId: getAccountDelegatorsByCycleList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: path
          name: cycleId
          required: true
          type: integer
          format: int64
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for account rewards
          schema:
            items:
              $ref: '#/definitions/BakerDelegator'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Accounts
  '/v2/data/{platform}/{network}/blocks':
    get:
      operationId: getBlocksList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_id
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: integer
          name: block_level
          description: Not used
          type: array
        - in: query
          name: before_level
          type: integer
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_netid
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_protocol
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_id
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_source
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_destination
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_participant
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_kind
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_id
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_manager
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_delegate
          description: Not used
          type: array
        - in: query
          name: sort_by
          description: Not used
          type: string
        - in: query
          name: order
          description: Not used
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for blocks
          schema:
            items:
              $ref: '#/definitions/BlocksRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Blocks
  '/v2/data/{platform}/{network}/blocks/head':
    get:
      operationId: getBlocksHead
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for blocks head
          schema:
            $ref: '#/definitions/BlocksRow'
        '400':
          description: Bad request
        '500':
          description: Not initialized
      tags:
        - Blocks
  '/v2/data/{platform}/{network}/blocks/{hash}':
    get:
      operationId: getBlock
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: hash
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for block by hash
          schema:
            $ref: >-
              #/definitions/BlockResult
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal error
      tags:
        - Blocks
  '/v2/data/{platform}/{network}/blocks/{hash}/endorsements':
    get:
      operationId: getBlockEndorsements
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: hash
          required: true
          type: string
      responses:
        '200':
          description: Endpoint for endorsements of a block by hash or level
          schema:
            items:
              $ref: '#/definitions/OperationsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal error
      tags:
        - Blocks
  '/v2/data/{platform}/{network}/blocks/{hash}/baking_rights':
    get:
      operationId: getBlockBakingRights
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: hash
          required: true
          type: string
      responses:
        '200':
          description: Endpoint for baking rights of a block by hash or level
          schema:
            items:
              $ref: '#/definitions/BakingRightsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal error
      tags:
        - Blocks
  '/v2/data/{platform}/{network}/operation_groups':
    get:
      operationId: getOperationGroups
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          required: true
          type: string
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: integer
          name: block_level
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_netid
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_protocol
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_source
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_destination
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_participant
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_kind
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_manager
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_delegate
          type: array
        - in: query
          name: sort_by
          type: string
        - in: query
          name: order
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for operation groups
          schema:
            items:
              type: string # Any - not yet supported
            type: array
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Operation groups
  '/v2/data/{platform}/{network}/operation_groups/{operationGroupId}':
    get:
      operationId: getOperationGroup
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          required: true
          type: string
        - in: path
          name: network
          required: true
          type: string
        - in: path
          name: operationGroupId
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for operation group
          schema:
            $ref: >-
              #/definitions/OperationGroupResult
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Operation groups
  '/v2/data/{platform}/{network}/operations':
    get:
      operationId: getOperationsList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - in: query
          name: before_id
          type: integer
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: integer
          name: block_level
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_netid
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_protocol
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_id
          description: Operation hash
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_source
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_destination
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_participant
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_kind
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_manager
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_delegate
          description: Not used
          type: array
        - in: query
          name: sort_by
          description: Not used
          type: string
        - in: query
          name: order
          description: Not used
          type: string
          enum: [asc, desc]
      responses:
        '200':
          description: Query compatibility endpoint for operations
          schema:
            items:
              $ref: '#/definitions/OperationsRow'
              #type: string # Any - not yet supported
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - OperationsList
  '/v2/data/{platform}/{network}/double_bakings':
    get:
      operationId: getDoubleBakingsList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: integer
          name: block_level
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_id
          description: Operation hash
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_id
          type: array
      responses:
        '200':
          description: Query compatibility endpoint for operations
          schema:
            items:
              $ref: '#/definitions/OperationsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - OperationsList
  '/v2/data/{platform}/{network}/double_endorsements':
    get:
      operationId: getDoubleEndorsementsList
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: integer
          name: block_level
          description: Not used
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_id
          description: Operation hash
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_id
          type: array
      responses:
        '200':
          description: Query compatibility endpoint for operations
          schema:
            items:
              $ref: '#/definitions/OperationsRow'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - OperationsList
  '/v2/data/{platform}/{network}/operations/avgFees':
    get:
      operationId: getAvgFees
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          required: true
          type: string
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 500
        - in: query
          name: offset
          description: Offset
          type: integer
          default: 0
          minimum: 0
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: integer
          name: block_level
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_netid
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: block_protocol
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_source
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_destination
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_participant
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_kind
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_id
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_manager
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: account_delegate
          type: array
        - in: query
          name: sort_by
          type: string
        - in: query
          name: order
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for average fees
          schema:
            type: string # Any - not yet supported
        '404':
          description: Not Found
      tags:
        - Fees
  '/v2/data/{network}/period':
    get:
      operationId: getPeriod
      produces:
        - application/json
      parameters:
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: id
          required: false
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for periods
          schema:
            $ref: >-
              #/definitions/PeriodInfo
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Voting
  '/v2/data/{network}/periods':
    get:
      operationId: getPeriodsList
      produces:
        - application/json
      parameters:
        - in: path
          name: network
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for periods
          schema:
            items:
              $ref: '#/definitions/Period'
            type: array
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Voting
  '/v2/data/{network}/proposals':
    get:
      operationId: getProposalsByPeriodID
      produces:
        - application/json
      parameters:
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: period_id
          type: integer
        - in: query
          name: limit
          type: integer
          default: 10
          minimum: 1
          maximum: 20
        - in: query
          name: offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for proposals
          schema:
            items:
              $ref: '#/definitions/Proposal'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '404':
          description: Not Found
      tags:
        - Voting
  '/v2/data/{network}/proposal_votes/{id}':
    get:
      operationId: getProposalVotesList
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 300
        - in: query
          name: offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for proposal votes
          schema:
            items:
              $ref: '#/definitions/ProposalVoter'
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '404':
          description: Not Found
      tags:
        - Voting
  '/v2/data/{network}/ballots/{id}':
    get:
      operationId: getBallotsByPeriodID
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 300
        - in: query
          name: offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for ballots
          schema:
            items:
              $ref: >-
                #/definitions/BallotVoter
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '404':
          description: Not Found
      tags:
        - Voting
  '/v2/data/{network}/non_voters/{id}':
    get:
      operationId: getNonVotersByPeriodID
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 300
        - in: query
          name: offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for ballots
          schema:
            items:
              $ref: >-
                #/definitions/NonVoter
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '404':
          description: Not Found
      tags:
        - Voting
  '/v2/data/{network}/protocols':
    get:
      operationId: getProtocolsList
      produces:
        - application/json
      parameters:
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 300
        - in: query
          name: offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for protocols
          schema:
            items:
              $ref: >-
                #/definitions/Protocol
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '404':
          description: Not Found
      tags:
        - Voting
  '/v2/data/{network}/assets':
    get:
      operationId: getAssetsList
      produces:
        - application/json
      parameters:
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 300
        - in: query
          name: offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for tokens list
          schema:
            items:
              $ref: >-
                #/definitions/TokenAssetRow
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Assets
  '/v2/data/{network}/assets/{asset_id}':
    get:
      operationId: getAssetTokenInfo
      produces:
        - application/json
      parameters:
        - in: path
          name: asset_id
          required: true
          type: string
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 300
        - in: query
          name: offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for token holders
          schema:
            $ref: >-
              #/definitions/TokenAssetRow
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Assets
  '/v2/data/{platform}/{network}/assets/{assetId}/report':
    get:
      operationId: getAssetReport
      produces:
        - text/csv
      parameters:
        - in: path
          name: platform
          description: Not used
          required: true
          type: string
        - in: path
          name: network
          description: Not used
          required: true
          type: string
        - in: path
          name: assetId
          required: true
          type: string
        - in: query
          name: from
          required: true
          type: integer
        - in: query
          name: to
          required: true
          type: integer
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: operation_type
          description: Not used
          type: array
      responses:
        '200':
          description: CSV file to download
          schema:
            type: array
            items:
              type: integer
              format: uint8
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal error
      tags:
        - Assets
  '/v2/data/{network}/assets/operations':
    get:
      operationId: getAssetOperationsList
      produces:
        - application/json
      parameters:
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 300
        - in: query
          name: offset
          type: integer
          default: 0
          minimum: 0
        - in: query
          name: asset_id
          type: array
          items:
            type: string
        - in: query
          name: account_id
          type: array
          items:
            type: string
        - in: query
          name: type
          type: array
          items:
            type: string
        - in: query
          collectionFormat: multi
          name: block_level
          type: array
          items:
            type: integer
      responses:
        '200':
          description: Query compatibility endpoint for token operations
          schema:
            items:
              $ref: >-
                #/definitions/AssetOperation
            type: array
          headers:
            X-Total-Count:
              description: The total number of data entries.
              type: integer
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Assets
  '/v2/data/{network}/assets/{asset_id}/holders':
    get:
      operationId: getAssetTokenHoldersList
      produces:
        - application/json
      parameters:
        - in: path
          name: asset_id
          required: true
          type: string
        - in: path
          name: network
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          default: 20
          minimum: 1
          maximum: 300
        - in: query
          name: offset
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Query compatibility endpoint for token holders
          schema:
            items:
              $ref: >-
                #/definitions/TokenHolderRow
            type: array
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - Assets
  '/v2/data/{platform}/{network}/mempool':
    get:
      operationId: getMempoolOperations
      produces:
        - application/json
      parameters:
        - in: path
          name: platform
          required: true
          type: string
        - in: path
          name: network
          required: true
          type: string
      responses:
        '200':
          description: Query compatibility endpoint for mempool operations
          schema:
            items:
              $ref: >-
                #/definitions/MempoolOperation
            type: array
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal error
      tags:
        - Mempool
  '/v2/{network}/ws':
    get:
      schemes: ["ws"]
      operationId: connectToWS
      parameters:
        - in: path
          name: network
          required: true
          type: string
      responses:
        '200':
        '400':
          description: Bad request
        '404':
          description: Not Found
      tags:
        - WS
  '/v2/data/profile':
    get:
      operationId: getUserProfile
      produces:
        - application/json
      parameters:
        - in: header
          name: address
          type: string
          required: true
      responses:
        '200':
          schema:
            $ref: "#/definitions/UserProfile"
          description: Get user profile
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Profile
  '/v2/data/profile/update':
    post:
      operationId: updateProfile
      consumes:
        - application/json
      parameters:
        - in: header
          name: address
          type: string
          required: true
        - in: body
          name: data
          schema:
            $ref: "#/definitions/RequestUserProfile"
      responses:
        '200':
          description: Update user profile
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Profile
  '/v2/data/profile/addresses':
    get:
      operationId: getUserAddresses
      produces:
        - application/json
      parameters:
        - in: header
          name: address
          type: string
          required: true
      responses:
        '200':
          schema:
            type: array
            items:
              $ref: "#/definitions/UserAddressWithBalance"
          description: Get user addresses
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Profile
  '/v2/data/profile/address':
    post:
      operationId: createOrUpdateUserAddress
      consumes:
        - application/json
      parameters:
        - in: header
          name: address
          type: string
          required: true
        - in: body
          name: data
          schema:
            $ref: "#/definitions/UserAddress"
      responses:
        '200':
          description: Create or update user address
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Profile
  '/v2/data/profile/delete/address':
    post:
      operationId: deleteUserAddress
      consumes:
        - application/json
      parameters:
        - in: header
          name: address
          type: string
          required: true
        - in: body
          name: data
          schema:
            $ref: "#/definitions/DeleteUserAddress"
      responses:
        '200':
          description: Deleted user address
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Profile
  '/v2/data/profile/notes':
    get:
      operationId: getUserNotes
      produces:
        - application/json
      parameters:
        - in: header
          name: address
          type: string
          required: true
      responses:
        '200':
          schema:
            type: array
            items:
              $ref: "#/definitions/UserNoteWithBalance"
          description: Get user notes
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Profile
  '/v2/data/profile/note':
    post:
      operationId: createOrUpdateNote
      consumes:
        - application/json
      parameters:
        - in: header
          name: address
          type: string
          required: true
        - in: body
          name: data
          schema:
            $ref: "#/definitions/UserNote"
      responses:
        '200':
          description: Updated user note
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Profile
  '/v2/data/profile/delete/note':
    post:
      operationId: deleteUserNote
      consumes:
        - application/json
      parameters:
        - in: header
          name: address
          type: string
          required: true
        - in: body
          name: data
          schema:
            $ref: "#/definitions/DeleteUserNote"
      responses:
        '200':
          description: Deleted user note
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Profile
  '/v2/data/profile/verify/email':
    post:
      operationId: verifyEmail
      consumes:
        - application/json
      parameters:
        - in: header
          name: address
          type: string
          required: true
      responses:
        '200':
          description: Verified user email
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Profile
  '/v2/data/profile/verify/email/token':
    post:
      operationId: verifyEmailToken
      consumes:
        - application/json
      parameters:
        - in: body
          name: data
          schema:
            $ref: "#/definitions/EmailToken"
      responses:
        '200':
          description: Verified user email token
        '400':
          description: Bad request
        '500':
          description: Internal error
      tags:
        - Profile
definitions:
  Info:
    properties:
      currency:
        type: string
      price:
        type: number
      price_24h_change:
        type: number
      staking_ratio:
        description: Staking ratio in percents (0-100).
        type: number
        minimum: 0
        maximum: 100
      annual_yield:
        type: number
        description: Expected annual return in percents.
      market_cap:
        type: number
      volume_24h:
        type: number
      circulating_supply:
        type: number
      blocks_in_cycle:
        type: integer
    required:
      - price
      - price_24h_change
    type: object
  AccountResult:
    properties:
      account:
        $ref: '#/definitions/AccountsRow'
    required:
      - account
    type: object
  BlockResult:
    properties:
      block:
        $ref: '#/definitions/BlocksRow'
      operation_groups:
        items:
          $ref: >-
            #/definitions/OperationGroupsRow
        type: array
    required:
      - block
      - operation_groups
    type: object
  OperationGroupResult:
    properties:
      operation_group:
        $ref: '#/definitions/OperationGroupsRow'
      operations:
        items:
          $ref: '#/definitions/OperationsRow'
        type: array
    required:
      - operation_group
      - operations
    type: object
  AccountsRow:
    properties:
      accountId:
        type: string
      accountName:
        type: string
      balance:
        format: int64
        type: integer
      blockId:
        type: string
      blockLevel:
        type: integer
        format: int64
      counter:
        format: int64
        type: integer
      delegateSetable:
        type: boolean
      delegateValue:
        type: string
      delegateName:
        type: string
      manager:
        type: string
      script:
        type: string
      spendable:
        type: boolean
      storage:
        type: string
      is_baker:
        type: boolean
      bakerInfo:
        $ref: '#/definitions/BakerInfo'
      createdAt:
        format: int64
        type: integer
      lastActive:
        format: int64
        type: integer
      transactions:
        format: int64
        type: integer
      operations:
        format: int64
        type: integer
      revealed:
        type: boolean
      index:
        format: int64
        type: integer
    required:
      - balance
      - accountId
      - delegateSetable
      - spendable
      - manager
      - counter
      - blockLevel
      - blockId
      - revealed
      - is_baker
    type: object
  BakersRow:
    properties:
      accountId:
        type: string
      bakerInfo:
        $ref: >-
          #/definitions/BakerInfo
    type: object
  PublicBaker:
    $ref: >-
      #/definitions/BakersRow
  PublicBakerSearch:
    properties:
      accountId:
        type: string
      name:
        type: string
  BakerInfo:
    properties:
      name:
        type: string
      stakingBalance:
        format: int64
        type: integer
      evaluatedBalance:
        type: integer
        format: int64
      frozenBalance:
        type: integer
        format: int64
      endorsementDeposits:
        format: int64
        type: integer
      bakingDeposits:
        format: int64
        type: integer
      endorsementRewards:
        format: int64
        type: integer
      bakingRewards:
        format: int64
        type: integer
      activeDelegators:
        format: int64
        type: integer
      blocks:
        format: int64
        type: integer
      endorsements:
        format: int64
        type: integer
      rolls:
        format: int64
        type: integer
      bakingSince:
        format: int64
        type: integer
      fee:
        format: int64
        type: integer
      totalPaidFees:
        format: int64
        type: integer
      stakingCapacity:
        format: int64
        type: integer
      media:
        type: object
        properties:
          twitter:
            format: string
          telegram:
            format: string
          site:
            format: string
          reddit:
            format: string
    required:
      - stakingBalance
      - evaluatedBalance
      - frozenBalance
      - endorsementDeposits
      - bakingDeposits
      - endorsementRewards
      - bakingRewards
      - activeDelegators
      - blocks
      - endorsements
      - rolls
      - bakingSince
      - fee
      - stakingCapacity
    type: object
  BlocksRow:
    properties:
      activeProposal:
        type: string
      baker:
        type: string
      blockTime:
        type: integer
        format: int64
      chainId:
        type: string
      consumedGas:
        type: integer
        format: int64
      context:
        type: string
      currentExpectedQuorum:
        format: int64
        type: integer
      expectedCommitment:
        type: boolean
      fitness:
        type: string
      hash:
        type: string
      level:
        format: int64
        type: integer
      metaCycle:
        format: int64
        type: integer
      metaCyclePosition:
        format: int64
        type: integer
      metaLevel:
        format: int64
        type: integer
      metaLevelPosition:
        format: int64
        type: integer
      metaVotingPeriod:
        format: int64
        type: integer
      metaVotingPeriodPosition:
        format: int64
        type: integer
      nonceHash:
        type: string
      operationsHash:
        type: string
      periodKind:
        type: string
      predecessor:
        type: string
      proto:
        format: int64
        type: integer
      protocol:
        type: string
      proposals:
        format: int64
        type: integer
      signature:
        type: string
      timestamp:
        format: int64
        type: integer
      validationPass:
        format: int64
        type: integer
      volume:
        format: int64
        type: integer
      fees:
        format: int64
        type: integer
      endorsements:
        format: int64
        type: integer
      seed_nonce_revelations:
        format: int64
        type: integer
      delegations:
        format: int64
        type: integer
      transactions:
        format: int64
        type: integer
      activate_accounts:
        format: int64
        type: integer
      ballots:
        format: int64
        type: integer
      originations:
        format: int64
        type: integer
      reveals:
        format: int64
        type: integer
      double_baking_evidence:
        format: int64
        type: integer
      double_endorsement_evidence:
        format: int64
        type: integer
      number_of_operations:
        format: int64
        type: integer
      priority:
        format: int64
        type: integer
      bakerName:
        type: string
      reward:
        format: int64
        type: integer
      deposit:
        format: int64
        type: integer
    required:
      - timestamp
      - validationPass
      - hash
      - fitness
      - proto
      - protocol
      - priority
      - predecessor
      - level
      - reward
    type: object
  OperationGroupsRow:
    properties:
      blockId:
        type: string
      branch:
        type: string
      chainId:
        type: string
      hash:
        type: string
      protocol:
        type: string
      signature:
        type: string
    required:
      - protocol
      - hash
      - branch
      - blockId
    type: object
  DoubleOperationDetails:
    properties:
      denounced_level:
        type: integer
        format: int64
      offender:
        type: string
      offender_name:
        type: string
      priority:
        type: integer
        format: int64
      evidence_baker:
        type: string
      evidence_baker_name:
        type: string
      baker_reward:
        type: integer
        format: int64
      lost_deposits:
        type: integer
        format: int64
      lost_rewards:
        type: integer
        format: int64
      lost_fees:
        type: integer
        format: int64
  OperationsRow:
    properties:
      parameters:
        type: string
      amount:
        type: integer
        format: int64
      balance:
        format: int64
        type: integer
      blockHash:
        type: string
      blockLevel:
        format: int64
        type: integer
      consumedGas:
        type: integer
        format: int64
      counter:
        type: integer
        format: int64
      cycle:
        type: integer
        format: int64
      confirmations:
        type: integer
        format: int64
      claimedAmount:
        type: integer
        format: int64
      delegatable:
        type: boolean
      delegate:
        type: string
      delegateName:
        type: string
      delegationAmount:
        type: integer
        format: int64
      destination:
        type: string
      destinationName:
        type: string
      endorsementDeposit:
        type: integer
        format: int64
      endorsementReward:
        type: integer
        format: int64
      fee:
        type: integer
        format: int64
      gasLimit:
        type: integer
        format: int64
      kind:
        type: string
      level:
        format: int64
        type: integer
      managerPubkey:
        type: string
      nonce:
        type: string
      operationGroupHash:
        type: string
      operationId:
        format: int64
        type: integer
      originatedContracts:
        type: string
      paidStorageSizeDiff:
        type: integer
        format: int64
      pkh:
        type: string
      publicKey:
        type: string
      script:
        type: string
      secret:
        type: string
      slots:
        type: string
      source:
        type: string
      sourceName:
        type: string
      spendable:
        type: boolean
      status:
        type: string
      storage:
        type: string
      storageLimit:
        type: integer
        format: int64
      storageSize:
        type: integer
        format: int64
      timestamp:
        format: int64
        type: integer
      ballot:
        type: string
      proposal:
        type: string
      reward:
        type: integer
        format: int64
      doubleOperationDetails:
        $ref: '#/definitions/DoubleOperationDetails'
    required:
      - blockHash
      - timestamp
      - operationId
      - operationGroupHash
      - kind
      - blockLevel
      - confirmations
    type: object
  BakingRightsPerBlock:
    properties:
      level:
        format: int64
        type: integer
      block_hash:
        type: string
      baker:
        type: string
      baker_priority:
        type: integer
      rights:
        type: array
        items:
          $ref: '#/definitions/BakingRightsRow'
    required:
      - baker_priority
  FutureBakingRightsPerBlock:
    properties:
      level:
        format: int64
        type: integer
      rights:
        type: array
        items:
          $ref: '#/definitions/BakingRightsRow'
  BakingRightsRow:
    properties:
      level:
        format: int64
        type: integer
      priority:
        format: int64
        type: integer
      delegate:
        type: string
      delegate_name:
        type: string
      estimated_time:
        type: string
        format: date-time
      reward:
        format: int64
        type: integer
      deposit:
        format: int64
        type: integer
    required:
      - priority
  Snapshots:
    properties:
      cycle:
        type: integer
      cycleStart:
        type: integer
        format: int64
      cycleEnd:
        type: integer
        format: int64
      snapshot_block:
        type: integer
      rolls:
        type: integer
  Period:
    properties:
      id:
        type: integer
      periodType:
        type: string
      curLevel:
        type: integer
      startLevel:
        type: integer
      endLevel:
        type: integer
      startTime:
        type: string
        format: date-time
      endTime:
        type: string
        format: date-time
    required:
      - id
  PeriodInfo:
    properties:
      period:
        $ref: '#/definitions/Period'
      totalPeriods:
        type: integer
      proposal:
        $ref: '#/definitions/Proposal'
      winner:
        $ref: '#/definitions/Proposal'
      voteStats:
        $ref: '#/definitions/VoteStats'
      ballots:
        $ref: '#/definitions/Ballots'
  VoteStats:
    properties:
      votesCast:
        type: integer
      votesAvailable:
        type: integer
      numVoters:
        type: integer
      numVotersTotal:
        type: integer
  Proposal:
    properties:
      period:
        type: integer
      hash:
        type: string
      title:
        type: string
      shortDescription:
        type: string
      proposalFile:
        type: string
      proposer:
        type: object
        properties:
          pkh:
            type: string
          name:
            type: string
      votesCasted:
        type: integer
      votesNum:
        type: integer
      minQuorum:
        type: integer
  ProposalVoter:
    properties:
      name:
        type: string
      pkh:
        type: string
      rolls:
        type: integer
      proposal:
        type: string
      blockLevel:
        type: integer
      operation:
        type: string
      timestamp:
        type: string
        format: date-time
  BallotVoter:
    properties:
      name:
        type: string
      pkh:
        type: string
      rolls:
        type: integer
      decision:
        type: string
      blockLevel:
        type: integer
      operation:
        type: string
      timestamp:
        type: string
        format: date-time
  NonVoter:
    properties:
      name:
        type: string
      pkh:
        type: string
      rolls:
        type: integer
  Ballots:
    properties:
      yay:
        type: integer
      nay:
        type: integer
      pass:
        type: integer
      quorum:
        type: number
      supermajority:
        type: number
  Protocol:
    properties:
      hash:
        type: string
      startBlock:
        type: integer
        format: int64
      endBlock:
        type: integer
        format: int64
    required:
      - hash
      - startBlock
      - endBlock
  AccountBalance:
    properties:
      timestamp:
        type: integer
        format: int64
      balance:
        type: integer
        format: int64
    required:
      - timestamp
      - balance
  AccountBakingRow:
    properties:
      cycle:
        type: integer
        format: int64
      cycleStart:
        type: integer
        format: int64
      cycleEnd:
        type: integer
        format: int64
      blocks:
        type: integer
        format: int64
      avgPriority:
        type: number
        format: float
      missed:
        type: integer
        format: int64
      stolen:
        type: integer
        format: int64
      rewards:
        type: integer
        format: int64
      status:
        type: string
      totalDeposit:
        type: integer
        format: int64
    required:
      - avgPriority
      - missed
      - stolen
      - cycle
      - rewards
      - blocks
      - totalDeposit
  AccountEndorsingRow:
    properties:
      cycle:
        type: integer
        format: int64
      cycleStart:
        type: integer
        format: int64
      cycleEnd:
        type: integer
        format: int64
      slots:
        type: integer
        format: int64
      missed:
        type: integer
        format: int64
      rewards:
        type: integer
        format: int64
      status:
        type: string
      totalDeposit:
        type: integer
        format: int64
    required:
      - cycle
      - missed
      - rewards
      - slots
      - totalDeposit
  EndorsementRightsRow:
    properties:
      cycle:
        type: integer
        format: int64
      blockLevel:
        type: integer
        format: int64
      delegate:
        type: string
      delegate_name:
        type: string
      slots:
        type: array
        items:
          type: integer
          format: int64
      reward:
        type: integer
        format: int64
      deposit:
        type: integer
        format: int64
      timestamp:
        type: integer
        format: int64
  AccountRewardsRow:
    properties:
      cycle:
        type: integer
        format: int64
      cycleStart:
        type: integer
        format: int64
      cycleEnd:
        type: integer
        format: int64
      delegators:
        type: integer
        format: int64
      stakingBalance:
        type: integer
        format: int64
      endorsements:
        type: integer
        format: int64
      baking:
        type: integer
        format: int64
      losses:
        type: integer
        format: int64
      fees:
        type: integer
        format: int64
      status:
        type: string
    required:
      - cycle
      - delegators
      - stakingBalance
      - endorsements
      - baking
      - losses
      - fees
  BakerDelegator:
    properties:
      delegator:
        type: string
      cycle:
        type: integer
        format: int64
      balance:
        type: integer
        format: int64
      share:
        type: number
    required:
      - delegator
      - balance
      - share
      - cycle
  ChartsData:
    properties:
      timestamp:
        type: integer
        format: int64
      blocks:
        type: integer
        format: int64
      transactionVolume:
        type: integer
        format: int64
      operations:
        type: integer
        format: int64
      averageDelay:
        type: number
        format: float64
      fees:
        type: integer
        format: int64
      activations:
        type: integer
        format: int64
      delegationVolume:
        type: integer
        format: int64
      bakers:
        type: integer
        format: int64
      whale_accounts:
        type: integer
        format: int64
    required:
      - timestamp
  BakerChartData:
    properties:
      baker:
        type: string
      baker_name:
        type: string
      rolls:
        type: integer
        format: int64
      percent :
        type: number
        format: float64
  BlockPriorityChartData:
    properties:
      cycle:
        type: integer
        format: int64
      cycleStart:
        type: integer
        format: int64
      cycleEnd:
        type: integer
        format: int64
      blocks:
        type: integer
        format: int64
      zeroPriority:
        type: integer
        format: int64
      firstPriority:
        type: integer
        format: int64
      secondPriority:
        type: integer
        format: int64
      thirdPriority:
        type: integer
        format: int64
    required:
      - cycle
      - blocks
      - zeroPriority
      - firstPriority
      - secondPriority
      - thirdPriority
  AccountSecurityDepositRow:
    properties:
      cycle:
        type: integer
        format: int64
      cycleStart:
        type: integer
        format: int64
      cycleEnd:
        type: integer
        format: int64
      staking_balance:
        type: integer
        format: int64
      status:
        type: string
      actual_blocks_deposit:
        type: integer
        format: int64
      expected_blocks_deposit:
        type: integer
        format: int64
      actual_endorsement_deposit:
        type: integer
        format: int64
      expected_endorsement_deposit:
        type: integer
        format: int64
      actual_total_deposit:
        type: integer
        format: int64
      expected_total_deposit:
        type: integer
        format: int64
      available_bond:
        type: integer
        format: int64
  TokenAssetRow:
    properties:
      name:
        type: string
      ticker:
        type: string
      account_id:
        type: string
      manager:
        type: string
      precision:
        type: integer
        format: int64
      created_at:
        type: integer
        format: int64
      total_supply:
        type: integer
        format: int64
    required:
      - precision
  AssetOperation:
    properties:
      operation_group_hash:
        type: string
      type:
        type: string
      from:
        type: string
      to:
        type: string
      amount:
        type: integer
        format: int64
      fee:
        type: integer
        format: int64
      gas_limit:
        type: integer
        format: int64
      storage_limit:
        type: integer
        format: int64
      timestamp:
        type: integer
        format: int64
    required:
      - amount
      - fee
      - gas_limit
      - storage_limit
  AccountAssetBalanceRow:
    properties:
      account_id:
        type: string
      balance:
        type: integer
        format: int64
      token_info:
        $ref: '#/definitions/TokenAssetRow'
  TokenHolderRow:
    properties:
      account_id:
        type: string
      balance:
        type: integer
        format: int64
    required:
      - balance
  Health:
    properties:
      status:
        type: boolean
  MempoolOperation:
    properties:
      protocol:
        type: string
      chain_id:
        type: string
      branch:
        type: string
      hash:
        type: string
      signature:
        type: string
      contents:
        type: object
  ThirdPartyBakers:
    properties:
      baker:
        type: string
      alias:
        type: string
      providers:
        type: array
        items:
          $ref: '#/definitions/ThirdPartyProvider'
  ThirdPartyProvider:
    properties:
      provider:
        type: string
      number:
        type: integer
        format: int64
      name:
        type: string
      address:
        type: string
      yield:
        type: number
      staking_balance:
        type: integer
        format: int64
      fee:
        type: number
      available_capacity:
        type: integer
        format: int64
      efficiency:
        type: number
      payout_accuracy:
        type: string
  RequestUserProfile:
    properties:
      email:
        type: string
      username:
        type: string
  UserProfile:
    properties:
      email:
        type: string
      username:
        type: string
      verified:
        type: boolean
    required:
      - email
      - username
      - verified
  UserAddress:
    properties:
      address:
        type: string
      delegations_enabled:
        type: boolean
      in_transfers_enabled:
        type: boolean
      out_transfers_enabled:
        type: boolean
    required:
      - address
      - delegations_enabled
      - in_transfers_enabled
      - out_transfers_enabled
  UserAddressWithBalance:
    properties:
      address:
        type: string
      delegations_enabled:
        type: boolean
      in_transfers_enabled:
        type: boolean
      out_transfers_enabled:
        type: boolean
      balance:
        type: integer
        format: int64
    required:
      - address
      - delegations_enabled
      - in_transfers_enabled
      - out_transfers_enabled
      - balance
  DeleteUserAddress:
    properties:
      address:
        type: string
  UserNote:
    properties:
      address:
        type: string
      alias:
        type: string
      tag:
        type: string
      description:
        type: string
  UserNoteWithBalance:
    properties:
      address:
        type: string
      alias:
        type: string
      tag:
        type: string
      description:
        type: string
      balance:
        type: integer
        format: int64
    required:
      - address
      - alias
      - tag
      - description
      - balance
  DeleteUserNote:
    properties:
      address:
        type: string
  EmailToken:
    properties:
      token:
        type: string