// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/everstake/teztracker/gen/models"
)

// GetAccountsTotalAggCountOKCode is the HTTP code returned for type GetAccountsTotalAggCountOK
const GetAccountsTotalAggCountOKCode int = 200

/*GetAccountsTotalAggCountOK Get accounts count by period

swagger:response getAccountsTotalAggCountOK
*/
type GetAccountsTotalAggCountOK struct {

	/*
	  In: Body
	*/
	Payload []*models.AggTimeInt `json:"body,omitempty"`
}

// NewGetAccountsTotalAggCountOK creates GetAccountsTotalAggCountOK with default headers values
func NewGetAccountsTotalAggCountOK() *GetAccountsTotalAggCountOK {

	return &GetAccountsTotalAggCountOK{}
}

// WithPayload adds the payload to the get accounts total agg count o k response
func (o *GetAccountsTotalAggCountOK) WithPayload(payload []*models.AggTimeInt) *GetAccountsTotalAggCountOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get accounts total agg count o k response
func (o *GetAccountsTotalAggCountOK) SetPayload(payload []*models.AggTimeInt) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAccountsTotalAggCountOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.AggTimeInt, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAccountsTotalAggCountBadRequestCode is the HTTP code returned for type GetAccountsTotalAggCountBadRequest
const GetAccountsTotalAggCountBadRequestCode int = 400

/*GetAccountsTotalAggCountBadRequest Bad request

swagger:response getAccountsTotalAggCountBadRequest
*/
type GetAccountsTotalAggCountBadRequest struct {
}

// NewGetAccountsTotalAggCountBadRequest creates GetAccountsTotalAggCountBadRequest with default headers values
func NewGetAccountsTotalAggCountBadRequest() *GetAccountsTotalAggCountBadRequest {

	return &GetAccountsTotalAggCountBadRequest{}
}

// WriteResponse to the client
func (o *GetAccountsTotalAggCountBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetAccountsTotalAggCountNotFoundCode is the HTTP code returned for type GetAccountsTotalAggCountNotFound
const GetAccountsTotalAggCountNotFoundCode int = 404

/*GetAccountsTotalAggCountNotFound Not Found

swagger:response getAccountsTotalAggCountNotFound
*/
type GetAccountsTotalAggCountNotFound struct {
}

// NewGetAccountsTotalAggCountNotFound creates GetAccountsTotalAggCountNotFound with default headers values
func NewGetAccountsTotalAggCountNotFound() *GetAccountsTotalAggCountNotFound {

	return &GetAccountsTotalAggCountNotFound{}
}

// WriteResponse to the client
func (o *GetAccountsTotalAggCountNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// GetAccountsTotalAggCountInternalServerErrorCode is the HTTP code returned for type GetAccountsTotalAggCountInternalServerError
const GetAccountsTotalAggCountInternalServerErrorCode int = 500

/*GetAccountsTotalAggCountInternalServerError Internal error

swagger:response getAccountsTotalAggCountInternalServerError
*/
type GetAccountsTotalAggCountInternalServerError struct {
}

// NewGetAccountsTotalAggCountInternalServerError creates GetAccountsTotalAggCountInternalServerError with default headers values
func NewGetAccountsTotalAggCountInternalServerError() *GetAccountsTotalAggCountInternalServerError {

	return &GetAccountsTotalAggCountInternalServerError{}
}

// WriteResponse to the client
func (o *GetAccountsTotalAggCountInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
