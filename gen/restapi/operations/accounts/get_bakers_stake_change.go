// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetBakersStakeChangeHandlerFunc turns a function with the right signature into a get bakers stake change handler
type GetBakersStakeChangeHandlerFunc func(GetBakersStakeChangeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBakersStakeChangeHandlerFunc) Handle(params GetBakersStakeChangeParams) middleware.Responder {
	return fn(params)
}

// GetBakersStakeChangeHandler interface for that can handle valid get bakers stake change params
type GetBakersStakeChangeHandler interface {
	Handle(GetBakersStakeChangeParams) middleware.Responder
}

// NewGetBakersStakeChange creates a new http.Handler for the get bakers stake change operation
func NewGetBakersStakeChange(ctx *middleware.Context, handler GetBakersStakeChangeHandler) *GetBakersStakeChange {
	return &GetBakersStakeChange{Context: ctx, Handler: handler}
}

/*GetBakersStakeChange swagger:route GET /v2/data/{platform}/{network}/bakers/stake/change Accounts getBakersStakeChange

GetBakersStakeChange get bakers stake change API

*/
type GetBakersStakeChange struct {
	Context *middleware.Context
	Handler GetBakersStakeChangeHandler
}

func (o *GetBakersStakeChange) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetBakersStakeChangeParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
