// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BlockPriorityChartData block priority chart data
// swagger:model BlockPriorityChartData
type BlockPriorityChartData struct {

	// blocks
	// Required: true
	Blocks *int64 `json:"blocks"`

	// cycle
	// Required: true
	Cycle *int64 `json:"cycle"`

	// cycle end
	CycleEnd int64 `json:"cycleEnd,omitempty"`

	// cycle start
	CycleStart int64 `json:"cycleStart,omitempty"`

	// first priority
	// Required: true
	FirstPriority *int64 `json:"firstPriority"`

	// second priority
	// Required: true
	SecondPriority *int64 `json:"secondPriority"`

	// third priority
	// Required: true
	ThirdPriority *int64 `json:"thirdPriority"`

	// zero priority
	// Required: true
	ZeroPriority *int64 `json:"zeroPriority"`
}

// Validate validates this block priority chart data
func (m *BlockPriorityChartData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBlocks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCycle(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstPriority(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecondPriority(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateThirdPriority(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateZeroPriority(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BlockPriorityChartData) validateBlocks(formats strfmt.Registry) error {

	if err := validate.Required("blocks", "body", m.Blocks); err != nil {
		return err
	}

	return nil
}

func (m *BlockPriorityChartData) validateCycle(formats strfmt.Registry) error {

	if err := validate.Required("cycle", "body", m.Cycle); err != nil {
		return err
	}

	return nil
}

func (m *BlockPriorityChartData) validateFirstPriority(formats strfmt.Registry) error {

	if err := validate.Required("firstPriority", "body", m.FirstPriority); err != nil {
		return err
	}

	return nil
}

func (m *BlockPriorityChartData) validateSecondPriority(formats strfmt.Registry) error {

	if err := validate.Required("secondPriority", "body", m.SecondPriority); err != nil {
		return err
	}

	return nil
}

func (m *BlockPriorityChartData) validateThirdPriority(formats strfmt.Registry) error {

	if err := validate.Required("thirdPriority", "body", m.ThirdPriority); err != nil {
		return err
	}

	return nil
}

func (m *BlockPriorityChartData) validateZeroPriority(formats strfmt.Registry) error {

	if err := validate.Required("zeroPriority", "body", m.ZeroPriority); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BlockPriorityChartData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BlockPriorityChartData) UnmarshalBinary(b []byte) error {
	var res BlockPriorityChartData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
