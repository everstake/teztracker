// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserAddress user address
// swagger:model UserAddress
type UserAddress struct {

	// address
	// Required: true
	Address *string `json:"address"`

	// delegations enabled
	// Required: true
	DelegationsEnabled *bool `json:"delegations_enabled"`

	// in transfers enabled
	// Required: true
	InTransfersEnabled *bool `json:"in_transfers_enabled"`

	// out transfers enabled
	// Required: true
	OutTransfersEnabled *bool `json:"out_transfers_enabled"`
}

// Validate validates this user address
func (m *UserAddress) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDelegationsEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInTransfersEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOutTransfersEnabled(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserAddress) validateAddress(formats strfmt.Registry) error {

	if err := validate.Required("address", "body", m.Address); err != nil {
		return err
	}

	return nil
}

func (m *UserAddress) validateDelegationsEnabled(formats strfmt.Registry) error {

	if err := validate.Required("delegations_enabled", "body", m.DelegationsEnabled); err != nil {
		return err
	}

	return nil
}

func (m *UserAddress) validateInTransfersEnabled(formats strfmt.Registry) error {

	if err := validate.Required("in_transfers_enabled", "body", m.InTransfersEnabled); err != nil {
		return err
	}

	return nil
}

func (m *UserAddress) validateOutTransfersEnabled(formats strfmt.Registry) error {

	if err := validate.Required("out_transfers_enabled", "body", m.OutTransfersEnabled); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserAddress) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserAddress) UnmarshalBinary(b []byte) error {
	var res UserAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
